<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.pjt.model.dao.CommentDao">

	<select id="selectAllComments" parameterType="map" resultType="Comment">
		SELECT
		c.comment_id as commentId,
		c.comment_content as commentContent,
		c.user_id as userId,
		c.article_id as articleId,
		c.created_at as createdAt,
		c.modified_at as modifiedAt,
		u.nickname,
		(SELECT COUNT(*) FROM comment_like l WHERE l.comment_id= c.comment_id) as commentLikeCnt,
		(SELECT COUNT(*) FROM comment_dislike d WHERE d.comment_id= c.comment_id) as commentDislikeCnt,
	    (SELECT COUNT(*) FROM comment_like l WHERE l.comment_id= c.comment_id AND l.user_id = #{userId}) as userCommentLikeCnt,
	    (SELECT COUNT(*) FROM comment_dislike d WHERE d.comment_id= c.comment_id AND d.user_id = #{userId}) as userCommentDislikeCnt
		FROM comment c
		JOIN user u ON c.user_id = u.user_id
		WHERE c.article_id = #{articleId};
	</select>

	<insert id="insertComment" parameterType="Comment">
		INSERT INTO comment
		(comment_content, user_id, article_id)
		VALUES (#{commentContent}, #{userId}, #{articleId})
	</insert>

	<update id="updateComment" parameterType="Comment">
		UPDATE comment
		SET
		comment_content = #{commentContent},
		modified_at = now()
		WHERE comment_id = #{commentId}
	</update>

	<delete id="deleteComment" parameterType="int">
		DELETE FROM comment
		WHERE comment_id = #{commentId}
	</delete>
	
	<select id="getCommentLikes" parameterType="int">
		SELECT COUNT(*) as commentLikeCnt
		FROM comment_like
		WHERE comment_id = #{commentId}
	</select>
	
	<select id="getCommentDislikes" parameterType="int">
		SELECT COUNT(*) as commentDislikeCnt
		FROM comment_dislike
		WHERE comment_id = #{commentId}
	</select>
	
	<insert id="plusCommentLikes" parameterType="map">
		INSERT INTO comment_like (user_id, comment_id) VALUES (#{userId}, #{commentId})
	</insert>
	
	<update id="minusCommentLikes" parameterType="map">
		DELETE FROM comment_like WHERE (user_id, comment_id) = (#{userId}, #{commentId})
	</update>
	
	<update id="plusCommentDislikes" parameterType="map">
		INSERT INTO comment_dislike (user_id, comment_id) VALUES (#{userId}, #{commentId})
	</update>
	
	<update id="minusCommentDislikes" parameterType="map">
		DELETE FROM comment_dislike WHERE (user_id, comment_id) = (#{userId}, #{commentId})
	</update>
	
</mapper>